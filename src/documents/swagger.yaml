swagger: '2.0'
info:
  description: Here's all the magic behind www.eos-icons.com
  version: 2.0.0
  title: EOS ICONS APIs

tags:
- name: icons
  description: APIs related to the icons
- name: suggestions
  description: APIs related to the suggestions

paths:
  /v2/suggestions/decide:
    post:
      tags:
      - suggestions
      summary: Approve/reject any suggestion
      description: This api is responsible for approving/rejecting a suggestion
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: decideSuggestionsBody
        schema:
          $ref: '#/definitions/decideSuggestionsBody'
      - in: header
        name: secretkey
        type: string
        required: true
      responses:
        "200":
          description: 200 (Success)
          schema:
            $ref: '#/definitions/decideSuggestionsResponse'
        "400":
          description: 400 (Bad Request)
          schema:
            $ref: '#/definitions/validationError'
  /v2/suggestions/add:
    post:
      tags:
      - suggestions
      summary: Add tag/category suggestion
      description: this api is responsible for adding a suggestion
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AddSuggestionsBody
        schema:
          $ref: '#/definitions/AddSuggestionsBody'
      - in: header
        name: secretkey
        type: string
        required: true
      responses:
        "200":
          description: 200 (Success)
          schema:
            $ref: '#/definitions/AddSuggestionsResponse'
        "409":
          description: The icon is already exist or already suggested
        "400":
          description: 400 (Bad Request) or The icon contains a blacklisted word
          schema:
            $ref: '#/definitions/validationError'
  /v2/suggestions/getAll:
    post:
      tags:
      - suggestions
      summary: Get all suggestions
      description: Get all pending/rejected/approved suggestions
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: status
        type: string
        required: false
        description: the filtered status, if not specified all suggestions will be returned 
      - in: header
        name: secretkey
        type: string
        required: true
      responses:
        "200":
          description: 200 (Success)
          schema:
            $ref: '#/definitions/getAllsuggestionsResponse'
  /v2/icons/getAll:
    post:
      tags:
      - icons
      summary: Get All the icons
      description: Get all the items in the db with custom color if requested.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: getAllbody
        schema:
          $ref: '#/definitions/getAllbody'
      responses:
        "200":
          description: 200 (Success)
          schema:
            $ref: '#/definitions/getAllresponse'
        "400":
          description: 400 (Bad Request)
          schema:
            $ref: '#/definitions/validationError'
  /v2/icons/getString:
    post:
      tags:
      - icons
      summary: Get the svg or base64 string of an icon
      description: Get customized or non-customized, single or multiple, svg or base64 strings of icons. 
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: getStringBody
        schema:
          $ref: '#/definitions/getStringBody'
      responses:
        "200":
          description: 200 (Success)
          schema:
            $ref: '#/definitions/getStringResponse'
        "400":
          description: 400 (Bad Request)
          schema:
            $ref: '#/definitions/validationError'
  /v2/icons/getFile:
    post:
      tags:
      - icons
      summary: Get svg or png icons
      description: Get customized or non-customized, single or multiple, svg or png icons. 
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: getFileBody
        schema:
          $ref: '#/definitions/getFileBody'
      responses:
        "200":
          description: 200 (Success) - a file will be downloaded if single icon, or a zip file if multiple icons
        "400":
          description: 400 (Bad Request)
          schema:
            $ref: '#/definitions/validationError'
  /v2/icons/getFont:
    post:
      tags:
      - icons
      summary: Get icons as Font
      description: Get customized or non-customized, single or multiple font of selected icons
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: getFontBody
        schema:
          $ref: '#/definitions/getFontBody'
      responses:
        "200":
          description: 200 (Success) - a zip folder will be downloaded
        "400":
          description: 400 (Bad Request)
          schema:
            $ref: '#/definitions/validationError'
definitions:
  decideSuggestionsBody:
    required:
    - iconName
    - type
    - suggestions
    - status
    properties:
      iconName:
        type: string
      type: 
        type: string
        enum: [tags,category]
      status: 
        type: string
        enum: [rejected,approved]
      suggestions: 
        type: array
        items:
          type: string
    example: 
      iconName: abstract
      type: tags
      suggestions:
        - base
        - tag2
      status: approved
  decideSuggestionsResponse:
    example: 
      success: true
      message: success
      data: Updated successfully
  getAllsuggestionsResponse:
    type: object
    required: 
      - suggestions
    properties:
      _id:
        type: string
      iconName:
        type: string
      suggestions: 
        type: array
        items:
          type: object
          example: {
                    "_id": "610468f77a9a59c82d5d3af2",
                    "suggestion": "base",
                    "type": "tags",
                    "status": "approved"
                }
  AddSuggestionsBody:
    required:
    - iconName
    - suggestions
    - type
    properties:
      iconName:
        type: string
      suggestion:
        type: string
      type: 
        type: string
        enum: [tags,category]
    example: 
      iconName: abstract
      suggestion: base
      type: tags
  AddSuggestionsResponse:
    example: 
      success: true
      message: success
      data: suggestions added successfully
  getFontBody:
    type: object
    required: 
      - icons
    properties:
      icons:
        type: array
        items: 
          type: string
        example: [abstract,abstract_incomplete]
      customizations: 
        type: object
        properties:
          rotateAngle:
            type: string
            example: 250
          flip:
            type: object
            properties:
              horizontal: 
                type: boolean
              vertical:
                type: boolean
            example: {horizontal: true, vertical: false}
      theme: 
        type: string
        example: filled
  getFileBody:
    type: object
    required: 
      - icons
      - exportAs
    properties:
      icons:
        type: array
        items: 
          type: string
        example: [abstract,abstract_incomplete]
      exportAs:
        type: string
        enum: [svg,png]
        example: svg
      customizations: 
        type: object
        properties:
          colorCode:
            type: string
            example: 'red'
          rotateAngle:
            type: string
            example: 250
          flip:
            type: object
            properties:
              horizontal: 
                type: boolean
              vertical:
                type: boolean
            example: {horizontal: true, vertical: false}
      theme: 
        type: string
        example: outlined
  getStringBody:
    type: object
    required: 
      - icons
      - stringType
    properties:
      icons:
        type: array
        items: 
          type: string
        example: [abstract,abstract_incomplete]
      stringType:
        type: string
        enum: [svg,base64]
        example: svg
      customizations: 
        type: object
        properties:
          colorCode:
            type: string
            example: 'red'
          rotateAngle:
            type: string
            example: 250
          flip:
            type: object
            properties:
              horizontal: 
                type: boolean
              vertical:
                type: boolean
            example: {horizontal: true, vertical: false}
  getStringResponse:
    required:
    - stringType
    - icons
    properties:
      stringType:
        type: string
        enum: [svg,base64]
      icons:
        type: object
        required: 
        - name
        - iconString
        properties: 
          name: 
            type: string
          iconString: 
            type: string
            enum: [svgString, base64String]
    example: 
      success: true
      message: success
      data:
        stringType: base64
        icons:
          - name: abstract
            iconString: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGcgZmlsbD0icmVkIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyNCwgMCkgc2NhbGUoLTEsIDEpIHJvdGF0ZSgyNTAsIDEyLCAxMikiPjxwYXRoIGQ9Ik0xNiwzSDhBMiwyLDAsMCwwLDYuMjksNGwtNCw3YTIsMiwwLDAsMCwwLDJsNCw3QTIsMiwwLDAsMCw4LDIxaDhhMiwyLDAsMCwwLDEuNzQtMWw0LTdhMiwyLDAsMCwwLDAtMmwtNC03QTIsMiwwLDAsMCwxNiwzWiIvPjwvZz48L3N2Zz4=
          - name: abstract_incomplete
            iconString: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGcgZmlsbD0icmVkIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyNCwgMCkgc2NhbGUoLTEsIDEpIHJvdGF0ZSgyNTAsIDEyLCAxMikiPjxwYXRoIGQ9Ik0yMS43MiwxMS4wMWwtNC4wMS03QTEuOTY3NzYsMS45Njc3NiwwLDAsMCwxNS45OCwzSDhBMS45Njc3NywxLjk2Nzc3LDAsMCwwLDYuMjcsNC4wMUw0Ljc0LDYuNjhsLS44LDEuMzlMMi4yNiwxMS4wMUEyLjAzMjUsMi4wMzI1LDAsMCwwLDIsMTJhMi4wMDQ0NCwyLjAwNDQ0LDAsMCwwLC4yNi45OWwxLjY4LDIuOTQuOCwxLjM5LDEuNTMsMi42N0ExLjk2Nzc3LDEuOTY3NzcsMCwwLDAsOCwyMWg3Ljk4YTEuOTY3NzYsMS45Njc3NiwwLDAsMCwxLjczLTEuMDFsNC4wMS03YTIuMDA0NDQsMi4wMDQ0NCwwLDAsMCwuMjYtLjk5QTEuOTU1NjUsMS45NTU2NSwwLDAsMCwyMS43MiwxMS4wMVptLTQuMzgzNjEsNS45NzM1MS4wMDU1Ni0uMDAzNzgtLjAwNDQuMDA3NVpNMjAuMjgsMTIsMTcuMzQ1LDE2Ljk3NDQ5Yy0uMTE4MzUuMDA4ODUtLjIzNDM3LjAyNTUxLS4zNTUuMDI1NTFBNC45OTQyNCw0Ljk5NDI0LDAsMCwxLDEyLDEyLjA5NzUzVjExLjk4QTUuMDA0LDUuMDA0LDAsMCwwLDcsN2EyLjk1OTY5LDIuOTU5NjksMCwwLDAtLjMxLjAzTDcuODksNWg4LjI2bDQuMTQsN1oiLz48L2c+PC9zdmc+
      
  getAllbody:
    type: object
    properties:
      color:
        type: string
        example: '#ff0000'
  getAllresponse:
    required:
    - _id
    - tags
    - name
    - svg
    - do
    - dont
    - category
    - type
    - date
    properties:
      tags:
        type: array
        items:
          type: string
      _id:
        type: string
      name:
        type: string
      svg:
        type: string
      svgOutlined:
        type: string
      do:
        type: string
      dont:
        type: string
      category:
        type: string
      type:
        type: string
      date:
        type: string
      hasOutlined:
        type: boolean
      dateOutlined:
        type: boolean
      label: 
        type: string
    example: 
      success: true
      message: success
      data:
        icons:
          - tags:
              - eos
              - resource
              - conceptual
              - non-representational
              - fawzi
              - non-realistic
              - symbolic
            _id: 60e0f9cb79abccd5a4c0649c
            name: abstract
            do: >-
              <ul><li>Use this icon to represent an abstract resource or
              tool.</li></ul>
            dont: <ul><li>n/a.</li></ul>
            category: virtualization
            type: static
            date: 30/11/2020
            hasOutlined: true
            dateOutlined: 19/02/2021
            svg: >-
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g
              fill="#ff0044" transform=" "><path
              d="M16,3H8A2,2,0,0,0,6.29,4l-4,7a2,2,0,0,0,0,2l4,7A2,2,0,0,0,8,21h8a2,2,0,0,0,1.74-1l4-7a2,2,0,0,0,0-2l-4-7A2,2,0,0,0,16,3Z"/></g></svg>
            svgOutlined: >-
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g
              fill="#ff0044" transform=" "><path
              d="M21.73188,11,17.72905,4A1.96655,1.96655,0,0,0,16.0099,3H8.00424A2.0381,2.0381,0,0,0,6.271,4L2.26812,11a1.99891,1.99891,0,0,0,0,2L6.271,20a2.03786,2.03786,0,0,0,1.73329,1H16.0099a1.96634,1.96634,0,0,0,1.71915-1l4.00283-7A1.99891,1.99891,0,0,0,21.73188,11ZM16,19H8L4,12,8,5h8l4,7Z"/></g></svg>
          - tags:
              - eos
              - resource
              - conceptual
              - non-representational
              - symbolic
              - maha-non-realistic
              - non-realistic
            _id: 60e107cc13e3d2d9b37435e2
            name: abstract_incomplete
            do: >-
              <ul><li>Use this icon to represent an incomplete abstract resource or
              tool.</li></ul>
            dont: <ul><li>n/a.</li></ul>
            category: virtualization
            type: static
            date: 30/11/2020
            svg: >-
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g
              fill="#ff0044" transform=" "><path
              d="M21.72,11.01l-4.01-7A1.96776,1.96776,0,0,0,15.98,3H8A1.96777,1.96777,0,0,0,6.27,4.01L4.74,6.68l-.8,1.39L2.26,11.01A2.0325,2.0325,0,0,0,2,12a2.00444,2.00444,0,0,0,.26.99l1.68,2.94.8,1.39,1.53,2.67A1.96777,1.96777,0,0,0,8,21h7.98a1.96776,1.96776,0,0,0,1.73-1.01l4.01-7a2.00444,2.00444,0,0,0,.26-.99A1.95565,1.95565,0,0,0,21.72,11.01Zm-4.38361,5.97351.00556-.00378-.0044.0075ZM20.28,12,17.345,16.97449c-.11835.00885-.23437.02551-.355.02551A4.99424,4.99424,0,0,1,12,12.09753V11.98A5.004,5.004,0,0,0,7,7a2.95969,2.95969,0,0,0-.31.03L7.89,5h8.26l4.14,7Z"/></g></svg>
  validationError:
    example: 
      success: false
      data: {}
      message: 'The schema error will be shown here'